import{a as Y,b as $,c as H,d as U,e as z,f as J,g as K,h as Q,i as W,j as X,k as Z,l as le,m as se,n as de,o as pe,p as ce,q as ue,r as fe,s as ye,t as ve,u as ge,v as Ee,w as he,x as _e,y as Fe}from"./chunk-NGXTZCCX.js";import{f as I}from"./chunk-HWATMX45.js";import{J as ee,K as te,L as ie,M as oe,N as re,O as ae,P as ne,Q as me,R as Pe,l as w,n as c,p as A,q as T,s as q,t as O,u as V,v as G,w as B,x as j,y as R,z as L}from"./chunk-J4VW5AI3.js";import{K as N,Q as k}from"./chunk-MO7EXJXY.js";import{Cb as _,Eb as g,Lb as P,Mb as r,Ob as F,Ta as n,Tb as S,Ua as u,ga as D,ib as f,kb as m,pa as E,qa as h,qc as b,rc as M,tb as o,ub as t,uc as C,vb as y,zb as x}from"./chunk-EASKA4KA.js";function be(l,s){l&1&&(o(0,"mat-error"),r(1," *Invalid identity format. Please enter 9 digits. "),t())}function Me(l,s){l&1&&(o(0,"mat-error"),r(1," *You must be at least 16 years old "),t())}function Ce(l,s){if(l&1&&(o(0,"mat-option",36),r(1),t()),l&2){let d=s.$implicit,e=g(2);m("value",d.id)("disabled",e.isPositionSelected(d.id)),n(),F(" ",d.name," ")}}function Ie(l,s){l&1&&(o(0,"mat-error"),r(1," *start Date must be after entry date "),t())}function Ne(l,s){if(l&1){let d=x();o(0,"div")(1,"div",27)(2,"mat-card")(3,"mat-card-header")(4,"mat-card-title"),r(5),t()(),o(6,"mat-card-content")(7,"mat-form-field",28)(8,"mat-label",29),r(9,"Choose Position"),t(),o(10,"mat-select",30),f(11,Ce,2,3,"mat-option",31),t()(),o(12,"mat-form-field")(13,"mat-label",32),r(14,"Start Date"),t(),y(15,"input",33)(16,"mat-datepicker-toggle",15)(17,"mat-datepicker",null,2),f(19,Ie,2,0,"mat-error",8),t(),o(20,"mat-form-field")(21,"mat-label",34),r(22,"Is Management"),t(),o(23,"mat-select",35)(24,"mat-option",20),r(25,"True"),t(),o(26,"mat-option",20),r(27,"False"),t()()(),o(28,"button",24),_("click",function(){let i=E(d).index,a=g();return h(a.removeExistPosition(i))}),r(29,"Remove"),t()()()()()}if(l&2){let d=s.index,e=P(18),i=g();n(),m("formGroupName",d),n(4),F("Position ",d+1,""),n(6),m("ngForOf",i.positionslist),n(4),m("matDatepicker",e),n(),m("for",e),n(3),m("ngIf",i.validateEntryDate),n(5),m("value",!0),n(2),m("value",!1)}}function ke(l,s){if(l&1&&(o(0,"mat-option",36),r(1),t()),l&2){let d=s.$implicit,e=g(2);m("value",d.id)("disabled",e.isPositionSelected(d.id)),n(),F(" ",d.name," ")}}function we(l,s){if(l&1){let d=x();o(0,"div")(1,"div",27)(2,"mat-card")(3,"mat-card-header")(4,"mat-card-title"),r(5),t()(),o(6,"mat-card-content")(7,"mat-form-field",28)(8,"mat-label",29),r(9,"Choose Position"),t(),o(10,"mat-select",30),f(11,ke,2,3,"mat-option",31),t()(),o(12,"mat-form-field")(13,"mat-label",32),r(14,"Start Date"),t(),y(15,"input",33)(16,"mat-datepicker-toggle",15)(17,"mat-datepicker",null,2),t(),o(19,"mat-form-field")(20,"mat-label",34),r(21,"Is Management"),t(),o(22,"mat-select",35)(23,"mat-option",20),r(24,"True"),t(),o(25,"mat-option",20),r(26,"False"),t()()(),o(27,"button",24),_("click",function(){let i=E(d).index,a=g();return h(a.removeNewPosition(i))}),r(28,"Remove"),t()()()()()}if(l&2){let d=s.index,e=P(18),i=g();n(),m("formGroupName",d),n(4),F("Position ",d+1,""),n(6),m("ngForOf",i.positionslist),n(4),m("matDatepicker",e),n(),m("for",e),n(7),m("value",!0),n(2),m("value",!1)}}var mt=(()=>{let s=class s{constructor(e,i,a,p,v,xe,De,Se){this.dialogRef=e,this.data=i,this.formBuilder=a,this.employeeService=p,this.router=v,this.dialog=xe,this.employeePositionService=De,this._positionService=Se}ngOnInit(){this._positionService.getPositionList().subscribe(e=>{console.log(e),this.positionslist=e}),this.employeeForm=this.formBuilder.group({identity:["",[c.required,c.pattern("^[0-9]{9}$")]],firstName:["",c.required],lastName:["",c.required],entryDate:["",c.required],birthDate:["",c.required,this.validateBirthDate.bind(this)],gender:["",c.required],updatePositions:this.formBuilder.array([]),addPositions:this.formBuilder.array([]),deletePositions:this.formBuilder.array([])}),this.employeeService.getEmployeeById(this.data.employeeId).subscribe(e=>{e&&(this.employeeForm.patchValue({identity:e.identity,firstName:e.firstName,lastName:e.lastName,entryDate:e.entryDate,birthDate:e.birthDate,gender:e.gender}),this.getPositionsEmployeeList())})}onSubmit(){if(console.log(this.employeeForm.value),console.log(this.employeeForm.valid),this.employeeForm.valid){let e={identity:this.employeeForm.value.identity,firstName:this.employeeForm.value.firstName,lastName:this.employeeForm.value.lastName,entryDate:this.employeeForm.value.entryDate,birthDate:this.employeeForm.value.birthDate,gender:this.employeeForm.value.gender};console.log(e),this.employeeService.updateEmployee(e,this.data.employeeId).subscribe(i=>{i&&console.log("Employee update successfully:",i)}),this.addEmployeePositions(),this.updateEmployeePositions(),this.deleteEmployeePositions(),this.router.navigate(["/employee-list"]),this.dialogRef.close()}}createPositionFormGroup(e){return this.formBuilder.group({employeeId:this.data.employeeId,positionId:[e?e.positionId:"",c.required],startDate:[e?e.startDate:"",c.required,this.validateEntryDate.bind(this)],isManagement:[e?e.isManagement:!1]})}getPositionsEmployeeList(){this.employeePositionService.getPositionEmployeeList(this.data.employeeId).subscribe(e=>{e&&e.length>0&&e.forEach(i=>{this.updatePosition(i)})})}validateEntryDate(e){return new Promise(i=>{let a=new Date(e.value);new Date(this.employeeForm.value.entryDate)>a?i({invalidateEntryDate:!0}):i(null)})}validateBirthDate(e){return new Promise(i=>{let a=new Date(e.value);new Date().getFullYear()-a.getFullYear()<16?i({underSixteen:!0}):i(null)})}updateEmployeePositions(){let i=this.employeeForm.get("updatePositions").value;this.employeePositionService.updateEmployeePositons(this.data.employeeId,i).subscribe(a=>{console.log("Employee position update successfully:",a)},a=>{console.error("Error update employee position:",a)})}addEmployeePositions(){let i=this.employeeForm.get("addPositions").value;this.employeePositionService.addNewEmployeePositions(i).subscribe(a=>{console.log("Employee position add successfully:",a)},a=>{console.error("Error add employee position:",a)})}deleteEmployeePositions(){this.employeeForm.get("deletePositions").value.forEach(a=>{this.employeePositionService.deleteEmployeePosition(this.data.employeeId,a.positionId).subscribe(p=>{console.log("Employee position delete successfully:",p)},p=>{console.error("Error delete employee position:",p)})})}get updatePositions(){return this.employeeForm.get("updatePositions")}get addPositions(){return this.employeeForm.get("addPositions")}get deletePositions(){return this.employeeForm.get("deletePositions")}updatePosition(e){this.employeeForm.get("updatePositions").push(this.createPositionFormGroup(e))}addPosition(){this.employeeForm.get("addPositions").push(this.createPositionFormGroup())}removeExistPosition(e){let i=this.employeeForm.get("updatePositions"),a=this.employeeForm.get("deletePositions");console.log(i.value[e]),a.push(this.createPositionFormGroup(i.value[e])),i.removeAt(e)}removeNewPosition(e){this.employeeForm.get("addPositions").removeAt(e)}isPositionSelected(e){let i=this.addPositions.controls.map(p=>p.get("positionId").value),a=this.updatePositions.controls.map(p=>p.get("positionId").value);return i.includes(e)||a.includes(e)}onCancel(){this.dialogRef.close()}};s.\u0275fac=function(i){return new(i||s)(u(ee),u(te),u(R),u(_e),u(I),u(ie),u(Pe),u(Fe))},s.\u0275cmp=D({type:s,selectors:[["app-edit-employee"]],standalone:!0,features:[S],decls:53,vars:11,consts:[["entryDatePicker",""],["picker",""],["startDatePicker",""],["mat-dialog-title",""],[1,"mat-typography"],[3,"formGroup"],["for","identity"],["matInput","","formControlName","identity","type","text","required",""],[4,"ngIf"],["for","firstName"],["matInput","","formControlName","firstName","type","text","required",""],["for","lastName"],["matInput","","formControlName","lastName","type","text","required",""],["for","entryDate"],["matInput","","formControlName","entryDate","required","",3,"matDatepicker"],["matSuffix","",3,"for"],["for","birthDate"],["matInput","","formControlName","birthDate","required","",3,"matDatepicker"],["for","gender"],["placeholder","Gender","formControlName","gender","required",""],[3,"value"],["formArrayName","updatePositions"],[4,"ngFor","ngForOf"],["formArrayName","addPositions"],["mat-button","","type","button",3,"click"],["mat-button","","mat-dialog-close",""],["mat-button","",3,"click"],[3,"formGroupName"],["appearance","fill"],["for","positionId"],["formControlName","positionId","required",""],[3,"value","disabled",4,"ngFor","ngForOf"],["for","startDate"],["matInput","","formControlName","startDate","required","",3,"matDatepicker"],["for","isManagement"],["formControlName","isManagement","required",""],[3,"value","disabled"]],template:function(i,a){if(i&1){let p=x();o(0,"h1",3),r(1,"Edit Employee"),t(),o(2,"mat-dialog-content",4)(3,"form",5)(4,"mat-form-field")(5,"mat-label",6),r(6,"Identity"),t(),y(7,"input",7),f(8,be,2,0,"mat-error",8),t(),o(9,"mat-form-field")(10,"mat-label",9),r(11,"First Name"),t(),y(12,"input",10),t(),o(13,"mat-form-field")(14,"mat-label",11),r(15,"Last Name"),t(),y(16,"input",12),t(),o(17,"mat-form-field")(18,"mat-label",13),r(19,"Entry Date"),t(),y(20,"input",14)(21,"mat-datepicker-toggle",15)(22,"mat-datepicker",null,0),t(),o(24,"mat-form-field")(25,"mat-label",16),r(26,"Birth Date"),t(),y(27,"input",17)(28,"mat-datepicker-toggle",15)(29,"mat-datepicker",null,1),f(31,Me,2,0,"mat-error",8),t(),o(32,"mat-form-field")(33,"mat-label",18),r(34,"Gender"),t(),o(35,"mat-select",19)(36,"mat-option",20),r(37,"Male"),t(),o(38,"mat-option",20),r(39,"Female"),t()()(),o(40,"form",21),f(41,Ne,30,8,"div",22),t(),o(42,"form",23),f(43,we,29,7,"div",22),t()()(),o(44,"mat-dialog-actions")(45,"button",24),_("click",function(){return E(p),h(a.addPosition())}),o(46,"mat-icon"),r(47,"add"),t(),r(48,"Add Position"),t(),o(49,"button",25),r(50,"Cancel"),t(),o(51,"button",26),_("click",function(){return E(p),h(a.onSubmit())}),r(52,"Edit"),t()()}if(i&2){let p=P(23),v=P(30);n(3),m("formGroup",a.employeeForm),n(5),m("ngIf",a.employeeForm.get("identity").hasError("pattern")),n(12),m("matDatepicker",p),n(),m("for",p),n(6),m("matDatepicker",v),n(),m("for",v),n(3),m("ngIf",a.employeeForm.get("birthDate").hasError("underSixteen")),n(5),m("value",0),n(2),m("value",1),n(3),m("ngForOf",a.updatePositions.controls),n(2),m("ngForOf",a.addPositions.controls)}},dependencies:[W,Q,me,oe,re,ne,ae,C,b,M,L,q,w,A,T,j,O,B,V,G,N,Z,X,z,U,Y,$,H,K,J,se,le,k,ue,de,pe,ce,he,Ee,fe,ve,ge,ye],styles:[".mat-form-field[_ngcontent-%COMP%]{width:100%}mat-card[_ngcontent-%COMP%]{width:100%;margin-bottom:16px}mat-card-header[_ngcontent-%COMP%], mat-card-content[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}mat-card-content[_ngcontent-%COMP%]{display:flex;flex-direction:column}mat-form-field[_ngcontent-%COMP%]{width:100%}"]});let l=s;return l})();export{mt as a};
